# Overview

3-mode 3D triangular facet renderer written in Clojure, built on the directional
flat shader with barycentric interpolation from in HW5. (Code still uses the
timmcHW4 namespace.) Input takes the form of TRI files specified by path on the
command line. Keyboard control provides rotation and scaling of the mesh about
the origin.

# Usage

## Modes

Mode must be specified at command line:

* simple: Triangles are simply rendered in the order they are provided.
* painter: Triangles are drawn back to front according to current viewpoint.
           Specifically, they are ordered by increasing max z value.
* zbuffer: Pixels are only overwritten when the point in question is nearer than
           points previously drawn for that pixel.

Again, all are rendered against a black background.

## Interaction

The left and right arrow keys change rotation around the Y (vertical) axis and
the up and down arrow keys change rotation around the X (horizontal) axis. Each
increments or decrements rotation by 0.1 radians. To compute the current scene,
the accumulated X rotation is applied before the Y rotation. The [r] key resets
both rotations to 0 radians.

The object may be scaled up by a factor of 1.1 using the [+] key and down by the
same factor using the [-] key. Scaling is reset to 1 using the [1] key.

# Compilation

timmcHW5 requires a GNU/Linux machine with Java on the classpath.

On first run, the Leiningen build tool will be downloaded into the project
directory and will install its dependencies into the ~/.lein directory.
Compilation is JIT and will occur during the first run.

# Execution

Invoke `./run.sh mode filename` to execute HW5.

# Known bugs

None.

# Extra credit

None.

# Third-party credit

* amalloy's "?" debugging macro: https://gist.github.com/c93c37345c49c47dcfa2
* Libraries used: Incanter (for matrices), Clojure, and Java standard libraries

